{
	"name": "nyctaxi_file_copy",
	"properties": {
		"folder": {
			"name": "Data Lake Demo"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "demo31",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "1",
				"spark.autotune.trackingId": "992a6507-8dec-47fa-b23b-a6e7cb73d301"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b99affbe-2256-409d-a682-c20a3963070b/resourceGroups/datakickstart-synapse-rg/providers/Microsoft.Synapse/workspaces/datakickstart-synapse/bigDataPools/demo31",
				"name": "demo31",
				"type": "Spark",
				"endpoint": "https://datakickstart-synapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/demo31",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"mssparkutils.fs.cp(\"wasbs://nyctlc@azureopendatastorage.blob.core.windows.net/yellow/puYear=2019\", \"/nyctaxi_raw/parquet/yellow/puYear=2019/\", recurse=True)"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql.functions import col, desc, regexp_replace, substring, to_date, from_json, explode, expr\r\n",
					"from pyspark.sql.types import StructType, StringType\r\n",
					"\r\n",
					"yellow_source_path = \"wasbs://nyctlc@azureopendatastorage.blob.core.windows.net/parquet/yellow/puYear=2019\"\r\n",
					"\r\n",
					"date_format = \"yyyy-MM-dd HH:mm:ss\"\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = spark.read.parquet(yellow_source_path)\r\n",
					"df.printSchema()"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.write.format(\"csv\").partitionBy(\"puMonth\").mode(\"overwrite\").option(\"compression\", \"gzip\").save(\"/nyctaxi_raw/csv/yellow/puYear=2019/\")"
				]
			}
		]
	}
}